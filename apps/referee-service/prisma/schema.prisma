// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Roles: referee, assignor, admin, coach
enum UserRole {
  REFEREE
  ASSIGNOR
  COACH
  ADMIN
}

model User {
  id           String     @id @default(cuid())
  email        String     @unique
  cognitoSub   String     @unique
  role         UserRole
  certifications Certification[]
  availability Availability[]
  assignments   Assignment[]
  createdAt    DateTime @default(now())
}

model Tournament {
  id         String     @id @default(cuid())
  name       String
  startDate  DateTime
  endDate    DateTime
  matches    Match[]
}

model Match {
  id           String       @id @default(cuid())
  startTime    DateTime
  endTime      DateTime
  field        String
  tournament   Tournament   @relation(fields: [tournamentId], references: [id])
  tournamentId String
  assignments  Assignment[]
}

model Assignment {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  match     Match    @relation(fields: [matchId], references: [id])
  matchId   String
  createdAt DateTime @default(now())
}

model Certification {
  id      String @id @default(cuid())
  name    String
  user    User?  @relation(fields: [userId], references: [id])
  userId  String?
}

model Availability {
  id        String   @id @default(cuid())
  startTime DateTime
  endTime   DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}